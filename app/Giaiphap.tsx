import React from 'react';
import {
  ScrollView,
  View,
  Text,
  TouchableOpacity,
  Image,
  StyleSheet,
  Dimensions,
  Platform,
  ImageBackground,
} from 'react-native';

const { width } = Dimensions.get('window');

// --- Reusable Interfaces ---
interface NavItem {
  label: string;
  target: string;
}

interface FeatureDetail {
  iconUrl: string;
  title: string;
  description: string;
}

// --- Data for VpsSolutionsScreen ---

const navItems: NavItem[] = [
  { label: 'Trang ch·ªß', target: 'index.html' },
  { label: 'D·ªãch v·ª•', target: 'Dichvu.html' },
  { label: 'Hosting', target: 'Hosting.html' },
  { label: 'M√°y ch·ªß v·∫≠t l√Ω', target: 'Mcvl.html' },
  { label: 'Gi·∫£i ph√°p', target: 'Giaiphap.html' },
  { label: 'Th√¥ng tin', target: 'Thongtin.html' },
  { label: 'ƒêi·ªÅu kho·∫£n', target: 'Dieukhoan.html' },
  { label: 'Trang qu·∫£n l√Ω', target: 'Tql.html' },
];

// Icon URLs are replaced with stable alternatives where necessary
const vpsSolutionsList: FeatureDetail[] = [
  {
    iconUrl: 'https://img.icons8.com/?size=96&id=12906&format=png', // L∆∞u tr·ªØ Website Icon
    title: 'Gi·∫£i Ph√°p L∆∞u Tr·ªØ Website',
    description: 'N·ªÅn t·∫£ng VPS t·ªëc ƒë·ªô cao, ·ªïn ƒë·ªãnh cho website c√° nh√¢n, blog, di·ªÖn ƒë√†n v√† trang tin t·ª©c. T·ªëi ∆∞u SEO v√† tr·∫£i nghi·ªám ng∆∞·ªùi d√πng.',
  },
  {
    iconUrl: 'https://img.icons8.com/?size=160&id=bznB5YNaw4Va&format=png', // Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ Icon
    title: 'Gi·∫£i Ph√°p Th∆∞∆°ng M·∫°i ƒêi·ªán T·ª≠',
    description: 'ƒê·∫£m b·∫£o website e-commerce c·ªßa b·∫°n ho·∫°t ƒë·ªông m∆∞·ª£t m√†, an to√†n v·ªõi kh·∫£ nƒÉng ch·ªãu t·∫£i cao trong c√°c m√πa cao ƒëi·ªÉm.',
  },
  {
    iconUrl: 'https://img.icons8.com/ios-filled/96/007bff/software-application-design.png', // Replacement for Images/2.png (Ph√°t tri·ªÉn ·ª©ng d·ª•ng Icon)
    title: 'Gi·∫£i Ph√°p Ph√°t Tri·ªÉn & Ki·ªÉm Th·ª≠',
    description: 'M√¥i tr∆∞·ªùng l√Ω t∆∞·ªüng ƒë·ªÉ c√°c nh√† ph√°t tri·ªÉn x√¢y d·ª±ng, ki·ªÉm th·ª≠ (test) v√† tri·ªÉn khai (deploy) ·ª©ng d·ª•ng m·ªôt c√°ch nhanh ch√≥ng.',
  },
  {
    iconUrl: 'https://img.icons8.com/ios-filled/96/007bff/game-controller.png', // Replacement for pngtree (M√°y ch·ªß Game Icon)
    title: 'Gi·∫£i Ph√°p M√°y Ch·ªß Game',
    description: 'VPS c·∫•u h√¨nh m·∫°nh, latency th·∫•p, ƒë·∫£m b·∫£o tr·∫£i nghi·ªám ch∆°i game online m∆∞·ª£t m√†, kh√¥ng gi√°n ƒëo·∫°n cho c·ªông ƒë·ªìng game th·ªß.',
  },
  {
    iconUrl: 'https://img.icons8.com/ios-filled/96/007bff/database.png', // Replacement for Images/1.png (L∆∞u tr·ªØ d·ªØ li·ªáu Icon)
    title: 'Gi·∫£i Ph√°p L∆∞u Tr·ªØ D·ªØ Li·ªáu & Backup',
    description: 'An to√†n v√† b·∫£o m·∫≠t cho d·ªØ li·ªáu quan tr·ªçng c·ªßa b·∫°n v·ªõi c√°c gi·∫£i ph√°p backup t·ª± ƒë·ªông v√† kh√¥i ph·ª•c d·ªÖ d√†ng.',
  },
  {
    iconUrl: 'https://img.icons8.com/color/96/customer-support.png', // Gi·∫£i ph√°p t√πy ch·ªânh Icon
    title: 'Gi·∫£i Ph√°p Doanh Nghi·ªáp T√πy Ch·ªânh',
    description: 'Ch√∫ng t√¥i t∆∞ v·∫•n v√† x√¢y d·ª±ng gi·∫£i ph√°p VPS theo y√™u c·∫ßu ƒë·∫∑c th√π, ph√π h·ª£p v·ªõi quy m√¥ v√† m·ª•c ti√™u c·ªßa doanh nghi·ªáp b·∫°n.',
  },
];

const vpsSolutionBenefits: FeatureDetail[] = [
  {
    iconUrl: 'https://img.icons8.com/?size=96&id=12906&format=png', // Hi·ªáu su·∫•t cao Icon (reused)
    title: 'Hi·ªáu Su·∫•t V∆∞·ª£t Tr·ªôi',
    description: 'M·ªói gi·∫£i ph√°p ƒë∆∞·ª£c tinh ch·ªânh ƒë·ªÉ mang l·∫°i hi·ªáu su·∫•t t·ªëi ƒëa cho m·ª•c ƒë√≠ch s·ª≠ d·ª•ng c·ª• th·ªÉ, t·ª´ t·ªëc ƒë·ªô x·ª≠ l√Ω ƒë·∫øn bƒÉng th√¥ng.',
  },
  {
    iconUrl: 'https://img.icons8.com/ios-filled/96/007bff/resize.png', // Replacement for pngtree (Linh ho·∫°t m·ªü r·ªông Icon)
    title: 'Linh Ho·∫°t & D·ªÖ M·ªü R·ªông',
    description: 'D·ªÖ d√†ng n√¢ng c·∫•p ho·∫∑c ƒëi·ªÅu ch·ªânh t√†i nguy√™n khi nhu c·∫ßu c·ªßa b·∫°n thay ƒë·ªïi, ƒë·∫£m b·∫£o gi·∫£i ph√°p lu√¥n ph√π h·ª£p.',
  },
  {
    iconUrl: 'https://img.icons8.com/ios-filled/96/007bff/shield.png', // Replacement for Images/1.png (B·∫£o m·∫≠t chuy√™n s√¢u Icon)
    title: 'B·∫£o M·∫≠t Chuy√™n S√¢u',
    description: '√Åp d·ª•ng c√°c bi·ªán ph√°p b·∫£o m·∫≠t ti√™n ti·∫øn nh·∫•t ƒë·ªÉ b·∫£o v·ªá d·ªØ li·ªáu v√† ·ª©ng d·ª•ng c·ªßa b·∫°n kh·ªèi c√°c m·ªëi ƒëe d·ªça.',
  },
  {
    iconUrl: 'https://img.icons8.com/color/96/customer-support.png', // H·ªó tr·ª£ chuy√™n gia Icon (reused)
    title: 'H·ªó Tr·ª£ B·ªüi Chuy√™n Gia',
    description: 'ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n gi√†u kinh nghi·ªám s·∫µn s√†ng t∆∞ v·∫•n v√† h·ªó tr·ª£ b·∫°n l·ª±a ch·ªçn, tri·ªÉn khai gi·∫£i ph√°p t·ªëi ∆∞u.',
  },
];

// --- Reusable Sub-components ---

const NavLink: React.FC<{ item: NavItem, onPress: (target: string) => void }> = ({ item, onPress }) => (
  <TouchableOpacity onPress={() => onPress(item.target)} style={styles.navLink}>
    <Text style={styles.navLinkText}>{item.label}</Text>
  </TouchableOpacity>
);

const FeatureItem: React.FC<{ feature: FeatureDetail }> = ({ feature }) => (
  <View style={styles.featureItem}>
    <Image source={{ uri: feature.iconUrl }} style={styles.featureIcon} resizeMode="contain" />
    <Text style={styles.featureTitle}>{feature.title}</Text>
    <Text style={styles.featureDescription}>{feature.description}</Text>
  </View>
);

// Placeholder banner image - replace with your actual banner
const BANNER_IMAGE_URL = 'https://images.pexels.com/photos/1779487/pexels-photo-1779487.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';

// --- Main Screen Component ---
const VpsSolutionsScreen: React.FC = () => {
  const handleNavLinkPress = (target: string) => {
    console.log(`Maps to: ${target}`);
    // Implement navigation logic here (e.g., using React Navigation)
  };

  const handleCtaPress = (action: string, target?: string) => {
    console.log(`CTA Press: ${action}`);
    if (target) {
      handleNavLinkPress(target); // Or specific anchor link scroll if implemented
    }
    // Implement action logic here
  };

  return (
    <ScrollView style={styles.safeArea} contentContainerStyle={styles.scrollViewContent}>
      {/* Header */}
      <View style={styles.header}>
        <View style={styles.navContainer}>
          <TouchableOpacity onPress={() => handleNavLinkPress('index.html')} style={styles.logoContainer}>
            <Text style={styles.logoText}>üåê VPS<Text style={styles.logoSpan}>Nets</Text></Text>
          </TouchableOpacity>
          <View style={styles.navLinksWrapper}>
            {navItems.map((item) => (
              <NavLink key={item.target} item={item} onPress={handleNavLinkPress} />
            ))}
          </View>
        </View>
      </View>

      {/* Hero Section with Banner (id="hero-solutions") */}
      <ImageBackground source={{ uri: BANNER_IMAGE_URL }} style={styles.heroSection} resizeMode="cover">
        <View style={styles.heroOverlay}>
          <Text style={styles.mainHeading}>Gi·∫£i Ph√°p M√°y Ch·ªß ·∫¢o Linh Ho·∫°t & T·ªëi ∆Øu</Text>
          <Text style={styles.subHeading}>Kh√°m ph√° c√°c gi·∫£i ph√°p VPS ƒë∆∞·ª£c thi·∫øt k·∫ø chuy√™n bi·ªát, ƒë√°p ·ª©ng m·ªçi nhu c·∫ßu t·ª´ website c√° nh√¢n ƒë·∫øn ·ª©ng d·ª•ng doanh nghi·ªáp ph·ª©c t·∫°p.</Text>
          <TouchableOpacity style={[styles.baseButton, styles.ctaButton]} onPress={() => handleCtaPress('Kh√°m Ph√° C√°c Gi·∫£i Ph√°p', '#solution-list')}>
            <Text style={[styles.baseButtonText, styles.ctaButtonText]}>Kh√°m Ph√° C√°c Gi·∫£i Ph√°p</Text>
          </TouchableOpacity>
        </View>
      </ImageBackground>

      {/* Solution List Section (id="solution-list") */}
      <View style={[styles.featuresSection, styles.containerPadding]}>
        <Text style={styles.sectionTitle}>Gi·∫£i Ph√°p VPS Ph√π H·ª£p M·ªçi Nhu C·∫ßu</Text>
        <Text style={styles.sectionSubtitle}>Ch√∫ng t√¥i cung c·∫•p c√°c gi·∫£i ph√°p VPS ƒë∆∞·ª£c t·ªëi ∆∞u h√≥a cho t·ª´ng m·ª•c ƒë√≠ch s·ª≠ d·ª•ng c·ª• th·ªÉ.</Text>
        <View style={styles.featuresGrid}>
          {vpsSolutionsList.map((solution, index) => (
            <FeatureItem key={index} feature={solution} />
          ))}
        </View>
      </View>

      {/* Solution Benefits Section (id="solution-benefits") */}
      <View style={[styles.featuresSection, styles.containerPadding, styles.lightBackgroundSection]}>
        <Text style={styles.sectionTitle}>L·ª£i √çch Khi Ch·ªçn Gi·∫£i Ph√°p VPS C·ªßa Ch√∫ng T√¥i</Text>
        <View style={styles.featuresGrid}>
          {vpsSolutionBenefits.map((benefit, index) => (
            <FeatureItem key={index} feature={benefit} />
          ))}
        </View>
      </View>

      {/* Contact Solutions Section (id="contact-solutions") */}
      <View style={[styles.finalCtaSection, styles.containerPadding]}>
        <Text style={styles.sectionTitleDarkBg}>B·∫°n C·∫ßn T∆∞ V·∫•n Gi·∫£i Ph√°p Ph√π H·ª£p?</Text>
        <Text style={styles.subHeadingDarkBg}>H√£y ƒë·ªÉ ƒë·ªôi ng≈© chuy√™n gia c·ªßa VPSNets gi√∫p b·∫°n t√¨m ra gi·∫£i ph√°p m√°y ch·ªß ·∫£o ho√†n h·∫£o nh·∫•t cho d·ª± √°n c·ªßa m√¨nh.</Text>
        <TouchableOpacity style={[styles.baseButton, styles.ctaButton]} onPress={() => handleCtaPress('Li√™n H·ªá T∆∞ V·∫•n Ngay', 'Thongtin.html')}>
          <Text style={[styles.baseButtonText, styles.ctaButtonText]}>Li√™n H·ªá T∆∞ V·∫•n Ngay</Text>
        </TouchableOpacity>
      </View>

      {/* Footer */}
      <View style={[styles.footer, styles.containerPadding]}>
        <Text style={styles.footerText}>&copy; 2024 VPSNets. ƒê√£ ƒëƒÉng k√Ω B·∫£n quy·ªÅn.</Text>
        <View style={styles.footerLinks}>
          <TouchableOpacity onPress={() => handleNavLinkPress('Dieukhoan.html')}>
            <Text style={styles.footerLinkText}>ƒêi·ªÅu kho·∫£n D·ªãch v·ª•</Text>
          </TouchableOpacity>
          <Text style={styles.footerLinkSeparator}> | </Text>
          <TouchableOpacity onPress={() => handleNavLinkPress('Chinh sach Bao mat')}>
            <Text style={styles.footerLinkText}>Ch√≠nh s√°ch B·∫£o m·∫≠t</Text>
          </TouchableOpacity>
        </View>
      </View>
    </ScrollView>
  );
};

// --- Styles ---
const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: '#FFFFFF',
  },
  scrollViewContent: {
    paddingBottom: 20,
  },
  containerPadding: {
    paddingHorizontal: 15,
  },
  // Header & Nav
  header: {
    backgroundColor: '#F8F9FA',
    paddingVertical: 10,
    borderBottomWidth: 1,
    borderBottomColor: '#E0E0E0',
  },
  navContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: 15,
  },
  logoContainer: {
    paddingVertical: 5,
  },
  logoText: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#007BFF',
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Bold' : 'Roboto_Bold',
  },
  logoSpan: {
    color: '#28A745',
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Bold' : 'Roboto_Bold',
  },
  navLinksWrapper: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'flex-end',
    flex: 1,
    marginLeft: 10,
  },
  navLink: {
    paddingHorizontal: 8,
    paddingVertical: 5,
  },
  navLinkText: {
    fontSize: 14,
    color: '#333',
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Regular' : 'Roboto_Regular',
  },
  // Hero Section with Banner
  heroSection: {
    paddingVertical: 50,
    alignItems: 'center',
    justifyContent: 'center',
    minHeight: 280, // Slightly taller for more impact
  },
  heroOverlay: {
    backgroundColor: 'rgba(0, 0, 0, 0.55)', // Slightly darker overlay
    paddingHorizontal: 15, // Ensure padding on sides
    paddingVertical: 25,
    borderRadius: 8,
    alignItems: 'center',
    marginHorizontal: 10, // Add horizontal margin for the overlay box itself
  },
  mainHeading: {
    fontSize: 26,
    fontWeight: 'bold',
    color: '#FFFFFF',
    textAlign: 'center',
    marginBottom: 15,
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Bold' : 'Roboto_Bold',
  },
  subHeading: {
    fontSize: 16,
    color: '#FFFFFF',
    textAlign: 'center',
    marginBottom: 25,
    lineHeight: 24,
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Regular' : 'Roboto_Regular',
  },
  // Buttons
  baseButton: {
    paddingVertical: 12,
    paddingHorizontal: 25,
    borderRadius: 5,
    alignItems: 'center',
    justifyContent: 'center',
    minWidth: 150,
  },
  baseButtonText: {
    fontSize: 16,
    fontWeight: 'bold',
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Bold' : 'Roboto_Bold',
  },
  ctaButton: {
    backgroundColor: '#28A745',
  },
  ctaButtonText: {
    color: '#FFFFFF',
  },
  // Section Generic
  sectionTitle: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#333',
    textAlign: 'center',
    marginBottom: 10, // Adjusted
    marginTop: 30,
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Bold' : 'Roboto_Bold',
  },
  sectionSubtitle: {
    fontSize: 16,
    color: '#555',
    textAlign: 'center',
    marginBottom: 25,
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Regular' : 'Roboto_Regular',
  },
  // Features Section (used for Solution List and Benefits)
  featuresSection: {
    paddingVertical: 30,
  },
  featuresGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-around',
  },
  featureItem: {
    width: width * 0.43, // Adjusted for slightly better fit if many items
    alignItems: 'center',
    marginBottom: 25,
    padding: 12,
    backgroundColor: '#FFFFFF', // Default white, overridden by lightBackgroundSection if needed
    borderRadius: 8,
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.2,
    shadowRadius: 1.41,
    borderWidth: 1, // Adding a subtle border
    borderColor: '#E9ECEF',
  },
  featureIcon: {
    width: 50, // Standardized icon size
    height: 50,
    marginBottom: 12,
  },
  featureTitle: {
    fontSize: 15, // Slightly adjusted
    fontWeight: 'bold',
    color: '#333',
    textAlign: 'center',
    marginBottom: 7,
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Bold' : 'Roboto_Bold',
  },
  featureDescription: {
    fontSize: 13,
    color: '#666',
    textAlign: 'center',
    lineHeight: 18,
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Regular' : 'Roboto_Regular',
  },
  lightBackgroundSection: { // For "Solution Benefits" section
    backgroundColor: '#f9f9f9',
  },
  // Final CTA Section
  finalCtaSection: {
    backgroundColor: '#343A40',
    paddingVertical: 40,
    alignItems: 'center',
  },
  sectionTitleDarkBg: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#FFFFFF',
    textAlign: 'center',
    marginBottom: 20,
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Bold' : 'Roboto_Bold',
  },
  subHeadingDarkBg: {
    fontSize: 16,
    color: '#E0E0E0',
    textAlign: 'center',
    marginBottom: 25,
    lineHeight: 24,
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Regular' : 'Roboto_Regular',
  },
  // Footer
  footer: {
    paddingVertical: 20,
    borderTopWidth: 1,
    borderTopColor: '#E0E0E0',
    alignItems: 'center',
  },
  footerText: {
    fontSize: 13,
    color: '#666',
    marginBottom: 10,
    textAlign: 'center',
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Regular' : 'Roboto_Regular',
  },
  footerLinks: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
  },
  footerLinkText: {
    fontSize: 13,
    color: '#007BFF',
    fontFamily: Platform.OS === 'ios' ? 'Roboto-Regular' : 'Roboto_Regular',
  },
  footerLinkSeparator: {
    fontSize: 13,
    color: '#666',
    marginHorizontal: 5,
  },
});

export default VpsSolutionsScreen;
